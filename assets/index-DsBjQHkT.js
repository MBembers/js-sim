var w=Object.defineProperty;var M=(o,t,e)=>t in o?w(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var s=(o,t,e)=>(M(o,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const h of i)if(h.type==="childList")for(const a of h.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function e(i){const h={};return i.integrity&&(h.integrity=i.integrity),i.referrerPolicy&&(h.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?h.credentials="include":i.crossOrigin==="anonymous"?h.credentials="omit":h.credentials="same-origin",h}function r(i){if(i.ep)return;i.ep=!0;const h=e(i);fetch(i.href,h)}})();class S{constructor(t,e){s(this,"is_playing");s(this,"scale");s(this,"mode");s(this,"objects");this.is_playing=!1,this.scale=t,this.mode=e,this.objects=[]}addObject(t){this.objects.push(t)}simulate(t){this.objects.forEach(e=>e.simulate(t,this.scale,this.mode))}draw(t){this.objects.forEach(e=>e.draw(t,this.scale,this.mode))}}class P{constructor(t,e,r,i,h,a,n,l,c,_=0,m=0){s(this,"x0");s(this,"y0");s(this,"l1");s(this,"l2");s(this,"theta1");s(this,"theta2");s(this,"m1");s(this,"m2");s(this,"damping1");s(this,"damping2");s(this,"theta1_v");s(this,"theta2_v");s(this,"g");s(this,"period_start");s(this,"color");s(this,"h",.001);s(this,"p_x1",-1);s(this,"p_y1",-1);s(this,"p_x2",-1);s(this,"p_y2",-1);s(this,"ctx");s(this,"energy_label",document.querySelector("#energy"));this.x0=t,this.y0=e,this.l1=r,this.l2=i,this.theta1=h,this.theta2=a,this.m1=n,this.m2=l,this.damping1=_,this.damping2=m,this.theta1_v=0,this.theta2_v=0,this.g=9.81,this.period_start=0,this.color="white",this.ctx=c}set_color(t){this.color=t}start_period(){this.period_start=performance.now()}end_period(){return performance.now()-this.period_start}f_theta1(){return this.theta1_v}f_theta2(){return this.theta2_v}f_theta1_v(t){let e=-this.g*(2*this.m1+this.m2)*Math.sin(this.theta1)-this.m2*this.g*Math.sin(this.theta1-2*this.theta2)-2*Math.sin(this.theta1-this.theta2)*this.m2*(this.theta2_v**2*this.l2+t**2*this.l1*Math.cos(this.theta1-this.theta2));return e=e/(this.l1*2*this.m1+this.m2-this.m2*Math.cos(2*this.theta1-2*this.theta2)),e}f_theta2_v(t){let e=2*Math.sin(this.theta1-this.theta2)*(this.theta1_v**2*this.l1*(this.m1+this.m2)+this.g*(this.m1+this.m2)*Math.cos(this.theta1)+t**2*this.l2*this.m2*Math.cos(this.theta1-this.theta2));return e=e/(this.l2*2*this.m1+this.m2-this.m2*Math.cos(2*this.theta1-2*this.theta2)),e}simulate(t,e,r){for(let n=0;n<t;n++){const l=this.f_theta1_v(this.theta1_v),c=this.f_theta1_v(this.theta1_v+this.h*l/2),_=this.f_theta1_v(this.theta1_v+this.h*c/2),m=this.f_theta1_v(this.theta1_v+this.h*_),y=this.theta1_v+this.h/6*(l+2*c+2*_+m),p=this.f_theta2_v(this.theta2_v),f=this.f_theta2_v(this.theta2_v+this.h*p/2),v=this.f_theta2_v(this.theta2_v+this.h*f/2),g=this.f_theta2_v(this.theta2_v+this.h*v),b=this.theta2_v+this.h/6*(p+2*f+2*v+g);this.theta1_v=y,this.theta2_v=b,this.theta1+=this.theta1_v*this.h,this.theta2+=this.theta2_v*this.h,!(r==1&&n<t-1)&&this.draw(this.ctx,e,r)}const i=this.y0+this.l1*Math.cos(this.theta1)*e,h=i+this.l2*Math.cos(this.theta2)*e;let a=1/2*(this.m1*this.l1**2*this.theta1_v**2+this.m2*this.l2**2*this.theta2_v**2);a+=this.m1*this.g*(1e3-i)+this.m2*this.g*(1e3-h),this.energy_label.innerHTML=a.toFixed(0).toString()}draw(t,e,r){const i=this.x0+this.l1*Math.sin(this.theta1)*e,h=this.y0+this.l1*Math.cos(this.theta1)*e,a=i+this.l2*Math.sin(this.theta2)*e,n=h+this.l2*Math.cos(this.theta2)*e;this.p_x1==-1&&(this.p_x1=i,this.p_y1=h,this.p_x2=a,this.p_y2=n),t.strokeStyle=this.color,t.fillStyle=this.color,r==1&&(t.lineWidth=4,t.beginPath(),t.moveTo(this.x0,this.y0),t.lineTo(i,h),t.lineTo(a,n),t.stroke(),t.beginPath(),t.arc(i,h,5,0,2*Math.PI),t.fill(),t.beginPath(),t.arc(a,n,5,0,2*Math.PI),t.fill()),r==2&&(t.lineWidth=1,t.beginPath(),t.moveTo(this.p_x2,this.p_y2),t.lineTo(a,n),t.stroke()),this.p_x1=i,this.p_x2=a,this.p_y1=h,this.p_y2=n}acceleration1(){return 0}}class x{constructor(){s(this,"canvas");s(this,"ctx");s(this,"fps_label");s(this,"start_button");s(this,"scene");s(this,"prev_t");s(this,"frames",2e3);this.canvas=document.querySelector("#sim-canvas"),this.fps_label=document.querySelector("#fps"),this.start_button=document.querySelector("#start-btn"),this.ctx=this.canvas.getContext("2d",{alpha:!0}),this.scene=new S(this.canvas.width/4.2,1),this.prev_t=0,this.setupControls(),this.setupScene()}update(){this.scene.is_playing&&this.clear();let t=performance.now();this.scene.is_playing&&this.scene.simulate(this.frames);let e=performance.now()-t;this.fps_label.innerHTML=`Frames: ${this.frames} Calc time: ${e.toFixed(2)}ms`,requestAnimationFrame(()=>this.update())}clear(){this.ctx.fillStyle="#222",this.scene.mode==1&&this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="white"}setupScene(){let t=new P(this.canvas.width/2,this.canvas.height/2,1,1,Math.PI,Math.PI/2,1,1,this.ctx);t.set_color("rgba(150, 100, 255, 0.5)"),this.scene.addObject(t),this.ctx.fillStyle="#222",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}setupControls(){this.start_button.onclick=()=>{this.scene.mode=Number.parseInt(document.querySelector("#mode").value),this.frames=Number.parseInt(document.querySelector("#frames").value),this.scene.is_playing=!this.scene.is_playing,this.start_button.innerHTML=this.scene.is_playing?"Pause":"Start"}}start(){this.update()}}let d=window.innerWidth*.7,u=window.innerHeight*.9;d=Math.min(d,u);u=Math.min(d,u);document.querySelector("#app").innerHTML=`
  <div class="main">
    <div class="side-left sidebar">
      <button id="start-btn">Start</button>
      <button id="clear-btn">Clear</button>
      <label for="mode">Mode: </label>
      <input type="number" id="mode" value=1>
      <label for="frames">Frames: </label>
      <input type="number" id="frames" value=20>
      <div id="energy">Energy = 0</div>
      <div id="fps">FPS: 0</div>
    </div>
    <canvas id="sim-canvas" width="${d}" height="${u}"></canvas>
  </div>
`;const q=new x;q.start();
